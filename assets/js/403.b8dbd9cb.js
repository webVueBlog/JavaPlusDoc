(window.webpackJsonp=window.webpackJsonp||[]).push([[403],{1235:function(e,t,n){"use strict";n.r(t);var r=n(1),a=Object(r.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("blockquote",[t("p",[e._v("点击勘误"),t("a",{attrs:{href:"https://github.com/webVueBlog/JavaPlusDoc/issues",target:"_blank",rel:"noopener noreferrer"}},[e._v("issues"),t("OutboundLink")],1),e._v("，哪吒感谢大家的阅读")])]),e._v(" "),t("img",{attrs:{align:"right",width:"100",src:"https://cdn.jsdelivr.net/gh/YunYouJun/yun/images/yun-alpha-compressed.png"}}),e._v(" "),t("h2",{attrs:{id:"pc网站实现微信扫码登录功能"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#pc网站实现微信扫码登录功能"}},[e._v("#")]),e._v(" PC网站实现微信扫码登录功能")]),e._v(" "),t("p",[e._v("加群联系作者vx：xiaoda0423")]),e._v(" "),t("p",[e._v("仓库地址："),t("a",{attrs:{href:"https://webvueblog.github.io/JavaPlusDoc/",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://webvueblog.github.io/JavaPlusDoc/"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"https://1024bat.cn/",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://1024bat.cn/"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("在 Java PC 网站中实现 "),t("strong",[e._v("微信扫码登录功能")]),e._v("，一般包括以下几个核心步骤：")]),e._v(" "),t("hr"),e._v(" "),t("h3",{attrs:{id:"🧩-一、整体流程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#🧩-一、整体流程"}},[e._v("#")]),e._v(" 🧩 一、整体流程")]),e._v(" "),t("ol",[t("li",[e._v("PC 页面点击“微信扫码登录”")]),e._v(" "),t("li",[e._v("后端生成一个带有 "),t("code",[e._v("state")]),e._v(" 的二维码 URL，返回给前端展示")]),e._v(" "),t("li",[e._v("用户使用微信扫描二维码并授权登录")]),e._v(" "),t("li",[e._v("微信服务器回调你的服务（通过 redirect_uri）并返回 "),t("code",[e._v("code")])]),e._v(" "),t("li",[e._v("后端用 "),t("code",[e._v("code")]),e._v(" 换取 "),t("code",[e._v("access_token")]),e._v(" 和 "),t("code",[e._v("openid")])]),e._v(" "),t("li",[e._v("后端根据 "),t("code",[e._v("openid")]),e._v(" 查找或注册用户，建立登录态（如生成 JWT/token）")])]),e._v(" "),t("h3",{attrs:{id:"📦-二、准备工作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#📦-二、准备工作"}},[e._v("#")]),e._v(" 📦 二、准备工作")]),e._v(" "),t("h4",{attrs:{id:"✅-注册微信公众号平台账号"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#✅-注册微信公众号平台账号"}},[e._v("#")]),e._v(" ✅ 注册微信公众号平台账号")]),e._v(" "),t("p",[e._v("登录微信开放平台\n申请"),t("strong",[e._v("网站应用")]),e._v("，设置：")]),e._v(" "),t("ul",[t("li",[e._v("授权回调域名（如："),t("code",[e._v("yourdomain.com")]),e._v("）")]),e._v(" "),t("li",[e._v("获取 AppID 和 AppSecret")])]),e._v(" "),t("h3",{attrs:{id:"🔧-三、核心代码实现"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#🔧-三、核心代码实现"}},[e._v("#")]),e._v(" 🔧 三、核心代码实现")]),e._v(" "),t("h4",{attrs:{id:"_1️⃣-获取二维码链接"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1️⃣-获取二维码链接"}},[e._v("#")]),e._v(" 1️⃣ 获取二维码链接")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('public String buildQrConnectUrl(String state) {\n    String appId = "yourAppId";\n    String redirectUri = URLEncoder.encode("https://yourdomain.com/wechat/callback", StandardCharsets.UTF_8);\n    return String.format(\n        "https://open.weixin.qq.com/connect/qrconnect?appid=%s&redirect_uri=%s&response_type=code&scope=snsapi_login&state=%s#wechat_redirect",\n        appId, redirectUri, state\n    );\n}\n')])])]),t("p",[e._v("前端拿这个 URL 去渲染二维码（可用 JavaScript + qrcode.js）")]),e._v(" "),t("h4",{attrs:{id:"_2️⃣-微信回调接口-code-换-token"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2️⃣-微信回调接口-code-换-token"}},[e._v("#")]),e._v(" 2️⃣ 微信回调接口（code 换 token）")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('@GetMapping("/wechat/callback")\npublic void wechatCallback(@RequestParam String code, @RequestParam String state, HttpServletResponse response) {\n    String appId = "yourAppId";\n    String appSecret = "yourAppSecret";\n    \n    // Step1: 获取 access_token\n    String tokenUrl = String.format(\n        "https://api.weixin.qq.com/sns/oauth2/access_token?appid=%s&secret=%s&code=%s&grant_type=authorization_code",\n        appId, appSecret, code\n    );\n\n    String tokenResponse = restTemplate.getForObject(tokenUrl, String.class);\n    JSONObject json = JSON.parseObject(tokenResponse);\n\n    String accessToken = json.getString("access_token");\n    String openId = json.getString("openid");\n\n    // Step2: 获取用户信息（可选）\n    String userInfoUrl = String.format(\n        "https://api.weixin.qq.com/sns/userinfo?access_token=%s&openid=%s",\n        accessToken, openId\n    );\n\n    String userInfoResponse = restTemplate.getForObject(userInfoUrl, String.class);\n    JSONObject userInfo = JSON.parseObject(userInfoResponse);\n\n    // Step3: 业务逻辑（查找/注册用户，设置 session/JWT）\n    User user = userService.loginOrRegisterByOpenId(openId, userInfo);\n\n    // Step4: 登录成功，跳转回原页面 + token\n    response.sendRedirect("/login/success?token=" + jwtService.generateToken(user));\n}\n')])])]),t("hr"),e._v(" "),t("h4",{attrs:{id:"_3️⃣-前端页面轮询-或用-websocket"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3️⃣-前端页面轮询-或用-websocket"}},[e._v("#")]),e._v(" 3️⃣ 前端页面轮询（或用 WebSocket）")]),e._v(" "),t("p",[e._v("扫码后微信授权完成，你的系统需要通知前端“扫码成功”。")]),e._v(" "),t("p",[e._v("实现方式：")]),e._v(" "),t("ul",[t("li",[e._v("使用 "),t("code",[e._v("state")]),e._v(" 存 redis（标记为“登录中”）")]),e._v(" "),t("li",[e._v("前端轮询 "),t("code",[e._v("/check-login?state=xxx")])]),e._v(" "),t("li",[e._v("登录完成后，状态标记为“已登录”，带上登录信息")])]),e._v(" "),t("h4",{attrs:{id:"_3️⃣-前端页面轮询-或用-websocket-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3️⃣-前端页面轮询-或用-websocket-2"}},[e._v("#")]),e._v(" 3️⃣ 前端页面轮询（或用 WebSocket）")]),e._v(" "),t("p",[e._v("扫码后微信授权完成，你的系统需要通知前端“扫码成功”。")]),e._v(" "),t("p",[e._v("实现方式：")]),e._v(" "),t("ul",[t("li",[e._v("使用 "),t("code",[e._v("state")]),e._v(" 存 redis（标记为“登录中”）")]),e._v(" "),t("li",[e._v("前端轮询 "),t("code",[e._v("/check-login?state=xxx")])]),e._v(" "),t("li",[e._v("登录完成后，状态标记为“已登录”，带上登录信息")])]),e._v(" "),t("h3",{attrs:{id:"📌-四、安全建议"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#📌-四、安全建议"}},[e._v("#")]),e._v(" 📌 四、安全建议")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("state")]),e._v(" 必须随机生成（防止 CSRF）")]),e._v(" "),t("li",[e._v("微信授权接口调用频率有限，注意做容错处理")]),e._v(" "),t("li",[e._v("对微信返回信息签名校验（可选）")]),e._v(" "),t("li",[e._v("最终登录态建议使用 JWT + HttpOnly Cookie 管理")])]),e._v(" "),t("p",[t("strong",[e._v("Spring Boot 实现微信扫码登录")]),e._v(" 的项目结构")]),e._v(" "),t("h2",{attrs:{id:"🏗️-项目结构概览"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#🏗️-项目结构概览"}},[e._v("#")]),e._v(" 🏗️ 项目结构概览")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("src/\n└── main/\n    └── java/\n        └── com/example/wechatlogin/\n            ├── controller/\n            │   └── WeChatLoginController.java\n            ├── service/\n            │   ├── WeChatLoginService.java\n            │   └── UserService.java\n            ├── dto/\n            │   └── WeChatUserInfo.java\n            └── util/\n                └── JwtUtil.java\n")])])]),t("h2",{attrs:{id:"🎯-1-controller-控制层"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#🎯-1-controller-控制层"}},[e._v("#")]),e._v(" 🎯 1. Controller - 控制层")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('@RestController\n@RequestMapping("/wechat")\npublic class WeChatLoginController {\n\n    @Autowired\n    private WeChatLoginService weChatLoginService;\n\n    @GetMapping("/qr-url")\n    public Map<String, String> getQrUrl() {\n        String state = UUID.randomUUID().toString();\n        String qrUrl = weChatLoginService.buildQrUrl(state);\n        // 可将 state 缓存到 Redis（未登录状态）\n        return Map.of("qrUrl", qrUrl, "state", state);\n    }\n\n    @GetMapping("/callback")\n    public void callback(@RequestParam String code, @RequestParam String state, HttpServletResponse response) throws IOException {\n        String token = weChatLoginService.handleCallback(code, state);\n        // 登录成功后跳转页面\n        response.sendRedirect("https://your-pc-site.com/login-success?token=" + token);\n    }\n\n    @GetMapping("/check-login")\n    public ResponseEntity<?> checkLogin(@RequestParam String state) {\n        // 查询是否登录成功\n        Optional<String> token = weChatLoginService.checkLoginStatus(state);\n        return token.map(t -> ResponseEntity.ok(Map.of("token", t)))\n                    .orElse(ResponseEntity.status(202).build());\n    }\n}\n')])])]),t("h2",{attrs:{id:"🧠-2-service-核心逻辑封装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#🧠-2-service-核心逻辑封装"}},[e._v("#")]),e._v(" 🧠 2. Service - 核心逻辑封装")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('@Service\npublic class WeChatLoginService {\n\n    private final String appId = "yourAppId";\n    private final String appSecret = "yourAppSecret";\n\n    @Autowired\n    private RestTemplate restTemplate;\n\n    @Autowired\n    private UserService userService;\n\n    @Autowired\n    private JwtUtil jwtUtil;\n\n    @Autowired\n    private RedisTemplate<String, String> redisTemplate;\n\n    public String buildQrUrl(String state) {\n        String redirectUri = URLEncoder.encode("https://yourdomain.com/wechat/callback", StandardCharsets.UTF_8);\n        return String.format(\n            "https://open.weixin.qq.com/connect/qrconnect?appid=%s&redirect_uri=%s&response_type=code&scope=snsapi_login&state=%s#wechat_redirect",\n            appId, redirectUri, state\n        );\n    }\n\n    public String handleCallback(String code, String state) {\n        String tokenUrl = String.format(\n            "https://api.weixin.qq.com/sns/oauth2/access_token?appid=%s&secret=%s&code=%s&grant_type=authorization_code",\n            appId, appSecret, code\n        );\n\n        JSONObject tokenJson = JSON.parseObject(restTemplate.getForObject(tokenUrl, String.class));\n        String openId = tokenJson.getString("openid");\n        String accessToken = tokenJson.getString("access_token");\n\n        String userInfoUrl = String.format(\n            "https://api.weixin.qq.com/sns/userinfo?access_token=%s&openid=%s",\n            accessToken, openId\n        );\n\n        JSONObject userInfoJson = JSON.parseObject(restTemplate.getForObject(userInfoUrl, String.class));\n        WeChatUserInfo userInfo = userInfoJson.toJavaObject(WeChatUserInfo.class);\n\n        // 登录或注册\n        String userId = userService.loginOrRegister(openId, userInfo);\n\n        // 生成 token\n        String token = jwtUtil.generateToken(userId);\n\n        // 缓存 state-token 映射\n        redisTemplate.opsForValue().set("wechat_login:" + state, token, Duration.ofMinutes(2));\n\n        return token;\n    }\n\n    public Optional<String> checkLoginStatus(String state) {\n        String token = redisTemplate.opsForValue().get("wechat_login:" + state);\n        return Optional.ofNullable(token);\n    }\n}\n')])])]),t("h2",{attrs:{id:"📄-3-dto-微信用户信息"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#📄-3-dto-微信用户信息"}},[e._v("#")]),e._v(" 📄 3. DTO - 微信用户信息")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("@Data\npublic class WeChatUserInfo {\n    private String openid;\n    private String nickname;\n    private String sex;\n    private String province;\n    private String city;\n    private String headimgurl;\n}\n")])])]),t("h2",{attrs:{id:"👤-4-userservice-模拟用户注册-登录逻辑"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#👤-4-userservice-模拟用户注册-登录逻辑"}},[e._v("#")]),e._v(" 👤 4. UserService - 模拟用户注册/登录逻辑")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("@Service\npublic class UserService {\n\n    // 示例：真实场景中应连接数据库\n    private final Map<String, String> fakeDb = new ConcurrentHashMap<>();\n\n    public String loginOrRegister(String openId, WeChatUserInfo userInfo) {\n        return fakeDb.computeIfAbsent(openId, k -> UUID.randomUUID().toString());\n    }\n}\n")])])]),t("h2",{attrs:{id:"🔐-5-jwtutil-简单-jwt-工具类-可替换为-jjwt"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#🔐-5-jwtutil-简单-jwt-工具类-可替换为-jjwt"}},[e._v("#")]),e._v(" 🔐 5. JwtUtil - 简单 JWT 工具类（可替换为 jjwt）")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('@Component\npublic class JwtUtil {\n    private final String secretKey = "yourSecretKey";\n\n    public String generateToken(String userId) {\n        return Jwts.builder()\n                .setSubject(userId)\n                .setIssuedAt(new Date())\n                .setExpiration(Date.from(Instant.now().plus(Duration.ofHours(2))))\n                .signWith(SignatureAlgorithm.HS256, secretKey)\n                .compact();\n    }\n}\n')])])]),t("h2",{attrs:{id:"⚙️-6-配置推荐"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#⚙️-6-配置推荐"}},[e._v("#")]),e._v(" ⚙️ 6. 配置推荐")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("spring:\n  redis:\n    host: localhost\n    port: 6379\n  jackson:\n    date-format: yyyy-MM-dd HH:mm:ss\n    time-zone: Asia/Shanghai\n")])])]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("@Configuration\npublic class RestTemplateConfig {\n    @Bean\n    public RestTemplate restTemplate() {\n        return new RestTemplate();\n    }\n}\n")])])])])}),[],!1,null,null,null);t.default=a.exports}}]);