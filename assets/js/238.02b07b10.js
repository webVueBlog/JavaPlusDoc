(window.webpackJsonp=window.webpackJsonp||[]).push([[238],{1032:function(_,v,t){"use strict";t.r(v);var a=t(1),s=Object(a.a)({},(function(){var _=this,v=_._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[v("blockquote",[v("p",[_._v("点击勘误"),v("a",{attrs:{href:"https://github.com/webVueBlog/JavaPlusDoc/issues",target:"_blank",rel:"noopener noreferrer"}},[_._v("issues"),v("OutboundLink")],1),_._v("，哪吒感谢大家的阅读")])]),_._v(" "),v("img",{attrs:{align:"right",width:"100",src:"https://cdn.jsdelivr.net/gh/YunYouJun/yun/images/yun-alpha-compressed.png"}}),_._v(" "),v("h2",{attrs:{id:"java变量"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#java变量"}},[_._v("#")]),_._v(" Java变量")]),_._v(" "),v("p",[_._v("了解局部变量、成员变量、静态变量和常量的特点与用途")]),_._v(" "),v("h3",{attrs:{id:"_01、局部变量"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_01、局部变量"}},[_._v("#")]),_._v(" 01、局部变量")]),_._v(" "),v("p",[_._v("在方法体内声明的变量被称为局部变量，该变量只能在该方法内使用，类中的其他方法并不知道该变量。")]),_._v(" "),v("p",[_._v("声明局部变量时的注意事项：")]),_._v(" "),v("ul",[v("li",[_._v("局部变量声明在方法、构造方法或者语句块中。")]),_._v(" "),v("li",[_._v("局部变量在方法、构造方法、或者语句块被执行的时候创建，当它们执行完成后，将会被销毁。")]),_._v(" "),v("li",[_._v("访问修饰符不能用于局部变量。")]),_._v(" "),v("li",[_._v("局部变量只在声明它的方法、构造方法或者语句块中可见。")]),_._v(" "),v("li",[_._v("局部变量是在栈上分配的。")]),_._v(" "),v("li",[_._v("局部变量没有默认值，所以局部变量被声明后，必须经过初始化，才可以使用。")])]),_._v(" "),v("h3",{attrs:{id:"_02、成员变量"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_02、成员变量"}},[_._v("#")]),_._v(" 02、成员变量")]),_._v(" "),v("p",[_._v("在类内部但在方法体外声明的变量称为成员变量，或者实例变量，或者字段。之所以称为实例变量，是因为该变量只能通过类的实例（对象）来访问。")]),_._v(" "),v("p",[_._v("声明成员变量时的注意事项：")]),_._v(" "),v("ul",[v("li",[_._v("成员变量声明在一个类中，但在方法、构造方法和语句块之外。")]),_._v(" "),v("li",[_._v("当一个对象被实例化之后，每个成员变量的值就跟着确定。")]),_._v(" "),v("li",[_._v("成员变量在对象创建的时候创建，在对象被销毁的时候销毁。")]),_._v(" "),v("li",[_._v("成员变量的值应该至少被一个方法、构造方法或者语句块引用，使得外部能够通过这些方式获取实例变量信息。")]),_._v(" "),v("li",[_._v("成员变量可以声明在使用前或者使用后。")]),_._v(" "),v("li",[_._v("访问修饰符可以修饰成员变量。")]),_._v(" "),v("li",[_._v("成员变量对于类中的方法、构造方法或者语句块是可见的。一般情况下应该把成员变量设为私有。通过使用访问修饰符可以使成员变量对子类可见；成员变量具有默认值。数值型变量的默认值是 0，布尔型变量的默认值是 false，引用类型变量的默认值是 null。变量的值可以在声明时指定，也可以在构造方法中指定。")])]),_._v(" "),v("h3",{attrs:{id:"_03、静态变量"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_03、静态变量"}},[_._v("#")]),_._v(" 03、静态变量")]),_._v(" "),v("p",[_._v("通过 static 关键字声明的变量被称为静态变量（类变量），它可以直接被类访问")]),_._v(" "),v("p",[_._v("声明静态变量时的注意事项：")]),_._v(" "),v("ul",[v("li",[_._v("静态变量在类中以 static 关键字声明，但必须在方法构造方法和语句块之外。")]),_._v(" "),v("li",[_._v("无论一个类创建了多少个对象，类只拥有静态变量的一份拷贝。")]),_._v(" "),v("li",[_._v("静态变量除了被声明为常量外很少使用。")]),_._v(" "),v("li",[_._v("静态变量储存在静态存储区。")]),_._v(" "),v("li",[_._v("静态变量在程序开始时创建，在程序结束时销毁。")]),_._v(" "),v("li",[_._v("与成员变量具有相似的可见性。但为了对类的使用者可见，大多数静态变量声明为 public 类型。")]),_._v(" "),v("li",[_._v("静态变量的默认值和实例变量相似。")]),_._v(" "),v("li",[_._v("静态变量还可以在静态语句块中初始化。")])]),_._v(" "),v("h3",{attrs:{id:"_04、常量"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_04、常量"}},[_._v("#")]),_._v(" 04、常量")]),_._v(" "),v("p",[_._v("在 Java 中，有些数据的值是不会发生改变的，这些数据被叫做常量——使用 final 关键字修饰的成员变量。常量的值一旦给定就无法改变！")]),_._v(" "),v("p",[_._v("常量在程序运行过程中主要有 2 个作用：")]),_._v(" "),v("p",[_._v("代表常数，便于修改（例如：圆周率的值，final double PI = 3.14）")]),_._v(" "),v("p",[_._v("增强程序的可读性（例如：常量 UP、DOWN 用来代表上和下，final int UP = 0）")])])}),[],!1,null,null,null);v.default=s.exports}}]);