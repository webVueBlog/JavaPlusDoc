(window.webpackJsonp=window.webpackJsonp||[]).push([[341],{1158:function(s,t,e){"use strict";e.r(t);var a=e(1),n=Object(a.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("blockquote",[t("p",[s._v("点击勘误"),t("a",{attrs:{href:"https://github.com/webVueBlog/JavaPlusDoc/issues",target:"_blank",rel:"noopener noreferrer"}},[s._v("issues"),t("OutboundLink")],1),s._v("，哪吒感谢大家的阅读")])]),s._v(" "),t("img",{attrs:{align:"right",width:"100",src:"https://cdn.jsdelivr.net/gh/YunYouJun/yun/images/yun-alpha-compressed.png"}}),s._v(" "),t("h2",{attrs:{id:"redis都有哪些数据类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#redis都有哪些数据类型"}},[s._v("#")]),s._v(" Redis都有哪些数据类型")]),s._v(" "),t("p",[s._v("Redis 主要有以下几种数据类型：")]),s._v(" "),t("ol",[t("li",[s._v("Strings")]),s._v(" "),t("li",[s._v("Hashes")]),s._v(" "),t("li",[s._v("Lists")]),s._v(" "),t("li",[s._v("Sets")]),s._v(" "),t("li",[s._v("Sorted Sets")]),s._v(" "),t("li",[s._v("Redis 除了这 5 种数据类型之外，还有 Bitmaps、HyperLogLogs、Streams 等。")])]),s._v(" "),t("h2",{attrs:{id:"strings"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#strings"}},[s._v("#")]),s._v(" Strings")]),s._v(" "),t("p",[s._v("这是最简单的类型，就是普通的 set 和 get，做简单的 KV 缓存。")]),s._v(" "),t("p",[s._v("set college szu")]),s._v(" "),t("h2",{attrs:{id:"hashes"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hashes"}},[s._v("#")]),s._v(" Hashes")]),s._v(" "),t("p",[s._v("这个是类似 map 的一种结构，这个一般就是可以将结构化的数据，比如一个对象（前提是这个对象没嵌套其他的对象）给缓存在 Redis 里，然后每次读写缓存的时候，可以就操作 hash 里的某个字段。")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('hset person name bingo\nhset person age 20\nhset person id 1\nhget person name\n\n(person = {\n"name": "bingo",\n"age": 20,\n"id": 1\n})\n\n')])])]),t("h2",{attrs:{id:"lists"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#lists"}},[s._v("#")]),s._v(" Lists")]),s._v(" "),t("p",[s._v("Lists 是有序列表，这个可以玩儿出很多花样。")]),s._v(" "),t("p",[s._v("比如可以通过 list 存储一些列表型的数据结构，类似粉丝列表、文章的评论列表之类的东西。")]),s._v(" "),t("p",[s._v("比如可以通过 lrange 命令，读取某个闭区间内的元素，可以基于 list 实现分页查询，这个是很棒的一个功能，基于 Redis 实现简单的高性能分页，可以做类似微博那种下拉不断分页的东西，性能高，就一页一页走。")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("# 0开始位置，-1结束位置，结束位置为-1时，表示列表的最后一个位置，即查看所有。\nlrange mylist 0 -1\n\n")])])]),t("p",[s._v("比如可以搞个简单的消息队列，从 list 头怼进去，从 list 尾巴那里弄出来。")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("lpush mylist 1\nlpush mylist 2\nlpush mylist 3 4 5\n\n# 1\nrpop mylist\n\n")])])]),t("h2",{attrs:{id:"sets"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sets"}},[s._v("#")]),s._v(" Sets")]),s._v(" "),t("p",[s._v("Sets 是无序集合，自动去重。")]),s._v(" "),t("p",[s._v("直接基于 set 将系统里需要去重的数据扔进去，自动就给去重了，如果你需要对一些数据进行快速的全局去重，你当然也可以基于 jvm 内存里的 HashSet 进行去重，但是如果你的某个系统部署在多台机器上呢？得基于 Redis 进行全局的 set 去重。")]),s._v(" "),t("p",[s._v("可以基于 set 玩儿交集、并集、差集的操作，比如交集吧，可以把两个人的粉丝列表整一个交集，看看俩人的共同好友是谁？对吧。")]),s._v(" "),t("p",[s._v("把两个大 V 的粉丝都放在两个 set 中，对两个 set 做交集。")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("#-------操作一个set-------\n# 添加元素\nsadd mySet 1\n\n# 查看全部元素\nsmembers mySet\n\n# 判断是否包含某个值\nsismember mySet 3\n\n# 删除某个/些元素\nsrem mySet 1\nsrem mySet 2 4\n\n# 查看元素个数\nscard mySet\n\n# 随机删除一个元素\nspop mySet\n\n#-------操作多个set-------\n# 将一个set的元素移动到另外一个set\nsmove yourSet mySet 2\n\n# 求两set的交集\nsinter yourSet mySet\n\n# 求两set的并集\nsunion yourSet mySet\n\n# 求在yourSet中而不在mySet中的元素\nsdiff yourSet mySet\n\n")])])]),t("h2",{attrs:{id:"sorted-sets"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sorted-sets"}},[s._v("#")]),s._v(" Sorted Sets")]),s._v(" "),t("p",[s._v("Sorted Sets 是排序的 set，去重但可以排序，写进去的时候给一个分数，自动根据分数排序。")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("zadd board 85 zhangsan\nzadd board 72 lisi\nzadd board 96 wangwu\nzadd board 63 zhaoliu\n\n# 获取排名前三的用户（默认是升序，所以需要 rev 改为降序）\nzrevrange board 0 3\n\n# 获取某用户的排名\nzrank board zhaoliu\n\n")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);