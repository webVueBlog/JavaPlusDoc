(window.webpackJsonp=window.webpackJsonp||[]).push([[91],{1038:function(r,t,i){"use strict";i.r(t);var n=i(1),e=Object(n.a)({},(function(){var r=this,t=r._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":r.$parent.slotKey}},[t("h1",{attrs:{id:"第15天"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第15天"}},[r._v("#")]),r._v(" 第15天")]),r._v(" "),t("p",[r._v("当对字符串进行修改的时候，需要使用 StringBuffer 和 StringBuilder 类。")]),r._v(" "),t("p",[r._v("和 String 类不同的是，StringBuffer 和 StringBuilder 类的对象能够被多次的修改，并且不产生新的未使用对象。")]),r._v(" "),t("p",[r._v("在使用 StringBuffer 类时，每次都会对 StringBuffer 对象本身进行操作，而不是生成新的对象，所以如果需要对字符串进行修改推荐使用 StringBuffer。")]),r._v(" "),t("p",[r._v("StringBuilder 类在 Java 5 中被提出，它和 StringBuffer 之间的最大不同在于 StringBuilder 的方法不是线程安全的（不能同步访问）。")]),r._v(" "),t("p",[r._v("由于 StringBuilder 相较于 StringBuffer 有速度优势，所以多数情况下建议使用 StringBuilder 类。")]),r._v(" "),t("h2",{attrs:{id:"stringbuffer-方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#stringbuffer-方法"}},[r._v("#")]),r._v(" StringBuffer 方法")]),r._v(" "),t("p",[r._v("以下是 StringBuffer 类支持的主要方法：")]),r._v(" "),t("p",[t("img",{attrs:{src:i(550),alt:"img_25.png"}})]),r._v(" "),t("hr"),r._v(" "),t("blockquote",[t("p",[r._v("这一章节掌握得怎么样？下一篇会更有趣哦，期待与你继续学习～")])])])}),[],!1,null,null,null);t.default=e.exports},550:function(r,t,i){r.exports=i.p+"assets/img/img_25.12afd048.png"}}]);