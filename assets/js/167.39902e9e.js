(window.webpackJsonp=window.webpackJsonp||[]).push([[167],{958:function(e,o,t){"use strict";t.r(o);var r=t(1),p=Object(r.a)({},(function(){var e=this,o=e._self._c;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h1",{attrs:{id:"zookeeper是什么"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#zookeeper是什么"}},[e._v("#")]),e._v(" Zookeeper是什么")]),e._v(" "),o("p",[e._v("让分布式系统“不打架”的大佬，分布式系统里几十台服务器同时干活，谁先执行任务？谁监控状态？数据一致性怎么保证？\nZookeeper就是干这个的，它是一个分布式协调服务，可以用来维护配置信息、命名、提供分布式同步和提供组服务。")]),e._v(" "),o("p",[e._v("本质上它是一个分布式协调服务，核心原理：树，节点，监听")]),e._v(" "),o("p",[e._v("它用属性结构（ZNode）存储数据，节点分两种，持久节点（永久数据），和临时节点（会话结束就消失）")]),e._v(" "),o("p",[e._v("更牛的是他的监听机制（Watcher），只要节点数据变动，立马通知所有相关程序")]),e._v(" "),o("p",[e._v("微服务里十几个服务互相调用，Zookeeper就是协调者，协调各个服务，协调各个节点，协调各个模块，协调各个服务器")]),e._v(" "),o("p",[e._v("服务注册与发现：kafka靠它管理Broker节点状态；设置分布式锁，配置中心，全部都能用它搞定！")]),e._v(" "),o("p",[e._v("没有Zookeeper分布式系统可能就是大型车祸现场，数据冲突")]),e._v(" "),o("p",[e._v("节点失联，任务重复执行")])])}),[],!1,null,null,null);o.default=p.exports}}]);