(window.webpackJsonp=window.webpackJsonp||[]).push([[253],{1040:function(t,s,a){"use strict";a.r(s);var r=a(1),n=Object(r.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"第14天"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第14天"}},[t._v("#")]),t._v(" 第14天")]),t._v(" "),s("blockquote",[s("p",[t._v("记得定时站起来活动活动，久坐对身体不好呢～")])]),t._v(" "),s("p",[t._v("今天认识 String 类")]),t._v(" "),s("h2",{attrs:{id:"string"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#string"}},[t._v("#")]),t._v(" String")]),t._v(" "),s("p",[t._v("字符串广泛应用 在 Java 编程中，在 Java 中字符串属于对象，Java 提供了 String 类来创建和操作字符串。")]),t._v(" "),s("h2",{attrs:{id:"创建字符串"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建字符串"}},[t._v("#")]),t._v(" 创建字符串")]),t._v(" "),s("p",[t._v("创建字符串最简单的方式如下:")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello World"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("可以使用关键字和构造方法来创建 String 对象。")]),t._v(" "),s("p",[t._v("用构造函数创建字符串：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" str2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello World"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("String 创建的字符串存储在公共池中，而 new 创建的字符串对象在堆上：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" s1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"dada"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("              "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// String 直接创建")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" s2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"dada"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("              "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// String 直接创建")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" s3 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" s1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 相同引用")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" s4 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"dada"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// String 对象创建")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" s5 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"dada"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// String 对象创建")]),t._v("\n")])])]),s("p",[s("code",[t._v("String")]),t._v(" 类是 Java 编程语言中的一个类，位于 "),s("code",[t._v("java.lang")]),t._v(" 包中。它用于表示字符串，即一系列字符的序列。"),s("code",[t._v("String")]),t._v(" 类是不可变的，意味着一旦创建了一个 "),s("code",[t._v("String")]),t._v(" 对象，就不能改变它的值。")]),t._v(" "),s("h3",{attrs:{id:"实现原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实现原理"}},[t._v("#")]),t._v(" 实现原理")]),t._v(" "),s("p",[s("code",[t._v("String")]),t._v(" 类内部使用一个 "),s("code",[t._v("char")]),t._v(" 类型的数组来存储字符序列。"),s("code",[t._v("char")]),t._v(" 类型在 Java 中占用 2 个字节（16 位），可以表示 Unicode 字符集中的字符。")]),t._v(" "),s("h3",{attrs:{id:"主要方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#主要方法"}},[t._v("#")]),t._v(" 主要方法")]),t._v(" "),s("ol",[s("li",[s("p",[s("strong",[t._v("创建字符串")]),t._v("：")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("获取字符串长度")]),t._v("：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("int length = str.length();")]),t._v("：返回字符串的长度，即字符序列的长度。")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("字符串连接")]),t._v("：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("String result = str1.concat(str2);")]),t._v("：将两个字符串连接成一个新的字符串。")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("字符串比较")]),t._v("：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("int result = str1.compareTo(str2);")]),t._v("：按字典顺序比较两个字符串。")]),t._v(" "),s("li",[s("code",[t._v("boolean result = str1.equals(str2);")]),t._v("：比较两个字符串的内容是否相等。")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("字符串查找")]),t._v("： str.indexOf")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("int index = str.indexOf(World);")]),t._v("：返回子字符串在字符串中第一次出现的位置。")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("字符串截取")]),t._v("：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("String subStr = str.substring(0, 5);")]),t._v("：返回从指定位置开始到指定位置的子字符串。")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("字符串转换")]),t._v("：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("char[] charArray = str.toCharArray();")]),t._v("：将字符串转换为字符数组。")]),t._v(" "),s("li",[s("code",[t._v("String upperStr = str.toUpperCase();")]),t._v("：将字符串转换为大写。")]),t._v(" "),s("li",[s("code",[t._v("String lowerStr = str.toLowerCase();")]),t._v("：将字符串转换为小写。")])])])]),t._v(" "),s("h3",{attrs:{id:"用途"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#用途"}},[t._v("#")]),t._v(" 用途")]),t._v(" "),s("p",[s("code",[t._v("String")]),t._v(" 类在处理字符串时非常有用，例如字符串的拼接、比较、查找、截取、转换等操作。在 Java 编程中，字符串是常用的数据类型之一，"),s("code",[t._v("String")]),t._v(" 类提供的方法可以简化字符串的处理工作。")]),t._v(" "),s("h3",{attrs:{id:"注意事项"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#注意事项"}},[t._v("#")]),t._v(" 注意事项")]),t._v(" "),s("ol",[s("li",[s("strong",[t._v("不可变性")]),t._v("："),s("code",[t._v("String")]),t._v(" 类是不可变的，这意味着一旦创建了一个 "),s("code",[t._v("String")]),t._v(" 对象，就不能改变它的值。如果需要修改字符串，应该创建一个新的 "),s("code",[t._v("String")]),t._v(" 对象。")]),t._v(" "),s("li",[s("strong",[t._v("性能考虑")]),t._v("：由于 "),s("code",[t._v("String")]),t._v(" 类是不可变的，每次修改字符串都会创建一个新的 "),s("code",[t._v("String")]),t._v(" 对象，这可能会影响性能。在性能敏感的应用中，应该尽量避免频繁地修改字符串。")]),t._v(" "),s("li",[s("strong",[t._v("线程安全")]),t._v("："),s("code",[t._v("String")]),t._v(" 类是线程安全的，因为它的实例是不可变的（immutable）。")])]),t._v(" "),s("hr"),t._v(" "),s("blockquote",[s("p",[t._v("学习编程就像搭积木，一块一块慢慢来，下一篇继续加油！")])])])}),[],!1,null,null,null);s.default=n.exports}}]);