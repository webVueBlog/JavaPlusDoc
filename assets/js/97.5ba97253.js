(window.webpackJsonp=window.webpackJsonp||[]).push([[97],{1125:function(a,e,s){"use strict";s.r(e);var r=s(1),t=Object(r.a)({},(function(){var a=this,e=a._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"docker架构"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#docker架构"}},[a._v("#")]),a._v(" docker架构")]),a._v(" "),e("p",[a._v("Docker 使用客户端-服务器 (C/S) 架构模式，使用远程API来管理和创建Docker容器。")]),a._v(" "),e("p",[a._v("Docker 容器通过 Docker 镜像来创建。")]),a._v(" "),e("p",[a._v("容器与镜像的关系类似于面向对象编程中的对象与类。")]),a._v(" "),e("p",[a._v("Docker 面向对象\n容器 对象\n镜像 类")]),a._v(" "),e("p",[e("img",{attrs:{src:s(590),alt:"img.png"}})]),a._v(" "),e("p",[a._v("Docker 镜像(Images)")]),a._v(" "),e("p",[a._v("Docker 镜像是用于创建 Docker 容器的模板。")]),a._v(" "),e("p",[a._v("Docker 容器(Container)")]),a._v(" "),e("p",[a._v("容器是独立运行的一个或一组应用。")]),a._v(" "),e("p",[a._v("Docker 客户端(Client)")]),a._v(" "),e("p",[a._v("Docker 客户端通过命令行或者其他工具使用 Docker API (https://docs.docker.com/reference/api/docker_remote_api) 与 Docker 的守护进程通信。")]),a._v(" "),e("p",[a._v("Docker 主机(Host)")]),a._v(" "),e("p",[a._v("一个物理或者虚拟的机器用于执行 Docker 守护进程和容器。")]),a._v(" "),e("p",[a._v("Docker 仓库(Registry)")]),a._v(" "),e("p",[a._v("Docker 仓库用来保存镜像，可以理解为代码控制中的代码仓库。")]),a._v(" "),e("p",[a._v("Docker Hub(https://hub.docker.com) 提供了庞大的镜像集合供使用。")]),a._v(" "),e("p",[a._v("Docker Machine")]),a._v(" "),e("p",[a._v("Docker Machine是一个简化Docker安装的命令行工具，通过一个简单的命令行即可在相应的平台上安装Docker，比如VirtualBox、 Digital Ocean、Microsoft Azure。")]),a._v(" "),e("p",[a._v("在docker容器中运行一个 Python Flask 应用来运行一个web应用。")]),a._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[a._v("Da@Da:~"),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# docker run -d -P training/webapp python app.py")]),a._v("\n")])])]),e("p",[a._v("参数说明:")]),a._v(" "),e("p",[a._v("-d:让容器在后台运行。")]),a._v(" "),e("p",[a._v("-P:将容器内部使用的网络端口映射到我们使用的主机上。")]),a._v(" "),e("p",[a._v("查看 WEB 应用容器\n使用 docker ps 来查看我们正在运行的容器")]),a._v(" "),e("p",[a._v("这里多了端口信息。")]),a._v(" "),e("p",[a._v("PORTS")]),a._v(" "),e("div",{staticClass:"language-java extra-class"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[e("span",{pre:!0,attrs:{class:"token number"}},[a._v("0.0")]),e("span",{pre:!0,attrs:{class:"token number"}},[a._v(".0")]),e("span",{pre:!0,attrs:{class:"token number"}},[a._v(".0")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("32769")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("->")]),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("5000")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("tcp\n")])])]),e("p",[a._v("Docker 开放了 5000 端口（默认 Python Flask 端口）映射到主机端口 32769 上。")]),a._v(" "),e("p",[a._v("这时我们可以通过浏览器访问WEB应用")]),a._v(" "),e("p",[a._v("也可以指定 -p 标识来绑定指定端口。")]),a._v(" "),e("div",{staticClass:"language-java extra-class"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[e("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Da")]),e("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Da")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("~")]),a._v("$ docker run "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("d "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("p "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("5000")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("5000")]),a._v(" training"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("webapp python app"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("py\n")])])]),e("p",[a._v("docker ps查看正在运行的容器")])])}),[],!1,null,null,null);e.default=t.exports},590:function(a,e,s){a.exports=s.p+"assets/img/img.fdf58527.png"}}]);