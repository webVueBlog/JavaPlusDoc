(window.webpackJsonp=window.webpackJsonp||[]).push([[304],{1128:function(a,t,s){"use strict";s.r(t);var e=s(1),r=Object(e.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"docker网络配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker网络配置"}},[a._v("#")]),a._v(" Docker网络配置")]),a._v(" "),t("h2",{attrs:{id:"docker网络架构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker网络架构"}},[a._v("#")]),a._v(" Docker网络架构")]),a._v(" "),t("p",[a._v("Docker使用插件化的网络架构，称为Container Network Model (CNM)。这种架构允许用户选择或替换Docker的网络驱动，以满足应用程序的需求。Docker内置了多种网络驱动，同时也支持网络插件。")]),a._v(" "),t("h3",{attrs:{id:"网络架构组件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#网络架构组件"}},[a._v("#")]),a._v(" 网络架构组件")]),a._v(" "),t("ul",[t("li",[t("strong",[a._v("沙盒（Sandbox）")]),a._v("：包含容器网络栈的配置，如网络接口、路由表和DNS设置")]),a._v(" "),t("li",[t("strong",[a._v("端点（Endpoint）")]),a._v("：将沙盒连接到网络的接口")]),a._v(" "),t("li",[t("strong",[a._v("网络（Network）")]),a._v("：可以相互通信的端点集合")])]),a._v(" "),t("h2",{attrs:{id:"docker默认网络"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker默认网络"}},[a._v("#")]),a._v(" Docker默认网络")]),a._v(" "),t("p",[a._v("当安装Docker时，它会自动创建三个网络：")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" network "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v("\nNETWORK ID     NAME      DRIVER    SCOPE\n9f6ae26fcaa1   bridge    bridge    "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("local")]),a._v("\n82b9c4d3e5a6   "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("host")]),a._v("      "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("host")]),a._v("      "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("local")]),a._v("\n33204c3f9584   none      null      "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("local")]),a._v("\n")])])]),t("h3",{attrs:{id:"bridge网络"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#bridge网络"}},[a._v("#")]),a._v(" bridge网络")]),a._v(" "),t("ul",[t("li",[a._v("默认网络，新创建的容器会自动连接到此网络")]),a._v(" "),t("li",[a._v("在宿主机上创建一个名为"),t("code",[a._v("docker0")]),a._v("的网桥")]),a._v(" "),t("li",[a._v("容器可以通过此网桥相互通信，也可以访问外部网络")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 查看bridge网络详情")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" network inspect bridge\n")])])]),t("h3",{attrs:{id:"host网络"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#host网络"}},[a._v("#")]),a._v(" host网络")]),a._v(" "),t("ul",[t("li",[a._v("容器共享宿主机的网络命名空间")]),a._v(" "),t("li",[a._v("容器直接使用宿主机的IP地址和端口")]),a._v(" "),t("li",[a._v("没有网络隔离，但性能较好")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 使用host网络启动容器")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--network")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("host")]),a._v(" nginx\n")])])]),t("h3",{attrs:{id:"none网络"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#none网络"}},[a._v("#")]),a._v(" none网络")]),a._v(" "),t("ul",[t("li",[a._v("容器没有网络接口")]),a._v(" "),t("li",[a._v("完全隔离的网络环境")]),a._v(" "),t("li",[a._v("适用于不需要网络的应用或自定义网络设置")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 使用none网络启动容器")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--network")]),a._v(" none nginx\n")])])]),t("h2",{attrs:{id:"自定义网络"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#自定义网络"}},[a._v("#")]),a._v(" 自定义网络")]),a._v(" "),t("p",[a._v("Docker允许用户创建自定义网络，以满足特定的网络需求。")]),a._v(" "),t("h3",{attrs:{id:"创建自定义网络"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#创建自定义网络"}},[a._v("#")]),a._v(" 创建自定义网络")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 创建基本的桥接网络")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" network create my-network\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 创建具有特定子网和网关的网络")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" network create "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--subnet")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("172.20")]),a._v(".0.0/16 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--gateway")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("172.20")]),a._v(".0.1 my-network\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 创建使用特定驱动的网络")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" network create "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--driver")]),a._v(" overlay my-network\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 创建具有IP范围的网络")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" network create "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--subnet")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("172.20")]),a._v(".0.0/16 --ip-range"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("172.20")]),a._v(".5.0/24 my-network\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 创建具有自定义选项的网络")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" network create "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--opt")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("com.docker.network.bridge.name")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("my-bridge my-network\n")])])]),t("h3",{attrs:{id:"网络驱动类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#网络驱动类型"}},[a._v("#")]),a._v(" 网络驱动类型")]),a._v(" "),t("ol",[t("li",[t("strong",[a._v("bridge")]),a._v("：默认的网络驱动，适用于单机环境中的容器")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" network create "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--driver")]),a._v(" bridge my-bridge\n")])])]),t("ol",{attrs:{start:"2"}},[t("li",[t("strong",[a._v("overlay")]),a._v("：用于Docker Swarm服务，允许跨多个Docker守护进程的容器通信")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" network create "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--driver")]),a._v(" overlay my-overlay\n")])])]),t("ol",{attrs:{start:"3"}},[t("li",[t("strong",[a._v("macvlan")]),a._v("：允许为容器分配MAC地址，使其在网络上显示为物理设备")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" network create "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--driver")]),a._v(" macvlan "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--subnet")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("192.168")]),a._v(".0.0/24 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--gateway")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("192.168")]),a._v(".0.1 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-o")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("parent")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("eth0 my-macvlan\n")])])]),t("ol",{attrs:{start:"4"}},[t("li",[t("strong",[a._v("ipvlan")]),a._v("：类似于macvlan，但共享MAC地址")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" network create "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--driver")]),a._v(" ipvlan "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--subnet")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("192.168")]),a._v(".0.0/24 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--gateway")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("192.168")]),a._v(".0.1 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-o")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("parent")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("eth0 my-ipvlan\n")])])]),t("ol",{attrs:{start:"5"}},[t("li",[t("p",[t("strong",[a._v("host")]),a._v("：使用宿主机网络")])]),a._v(" "),t("li",[t("p",[t("strong",[a._v("none")]),a._v("：禁用容器网络")])])]),a._v(" "),t("h2",{attrs:{id:"容器网络操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#容器网络操作"}},[a._v("#")]),a._v(" 容器网络操作")]),a._v(" "),t("h3",{attrs:{id:"连接容器到网络"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#连接容器到网络"}},[a._v("#")]),a._v(" 连接容器到网络")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 创建容器时连接到网络")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--name")]),a._v(" web "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--network")]),a._v(" my-network nginx\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 将现有容器连接到网络")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" network connect my-network container_id\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 连接到网络并指定IP地址")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" network connect "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--ip")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("172.20")]),a._v(".5.10 my-network container_id\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 连接到多个网络")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" network connect my-network2 container_id\n")])])]),t("h3",{attrs:{id:"断开容器与网络的连接"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#断开容器与网络的连接"}},[a._v("#")]),a._v(" 断开容器与网络的连接")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" network disconnect my-network container_id\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 强制断开连接")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" network disconnect "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" my-network container_id\n")])])]),t("h3",{attrs:{id:"查看容器网络配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#查看容器网络配置"}},[a._v("#")]),a._v(" 查看容器网络配置")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 查看容器网络设置")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" inspect "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--format")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'{{json .NetworkSettings.Networks}}'")]),a._v(" container_id\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 查看容器IP地址")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" inspect "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}'")]),a._v(" container_id\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 查看容器端口映射")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" port container_id\n")])])]),t("h2",{attrs:{id:"端口映射"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#端口映射"}},[a._v("#")]),a._v(" 端口映射")]),a._v(" "),t("p",[a._v("端口映射允许外部访问容器内的服务。")]),a._v(" "),t("h3",{attrs:{id:"基本端口映射"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基本端口映射"}},[a._v("#")]),a._v(" 基本端口映射")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 映射特定端口")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("8080")]),a._v(":80 nginx\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 映射所有端口")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-P")]),a._v(" nginx\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 映射到特定IP地址")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("127.0")]),a._v(".0.1:8080:80 nginx\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 映射到随机端口")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("127.0")]),a._v(".0.1::80 nginx\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 映射UDP端口")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("8080")]),a._v(":80/udp nginx\n")])])]),t("h3",{attrs:{id:"查看端口映射"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#查看端口映射"}},[a._v("#")]),a._v(" 查看端口映射")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 查看容器的端口映射")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" port container_id\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 查看所有容器的端口映射")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ps")]),a._v("\n")])])]),t("h2",{attrs:{id:"容器间通信"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#容器间通信"}},[a._v("#")]),a._v(" 容器间通信")]),a._v(" "),t("h3",{attrs:{id:"同一网络中的容器通信"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#同一网络中的容器通信"}},[a._v("#")]),a._v(" 同一网络中的容器通信")]),a._v(" "),t("p",[a._v("在同一自定义网络中的容器可以通过容器名称相互访问。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 创建网络")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" network create my-network\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 创建容器并连接到网络")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--name")]),a._v(" web "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--network")]),a._v(" my-network nginx\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--name")]),a._v(" db "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--network")]),a._v(" my-network mysql:5.7\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# web容器可以通过名称访问db容器")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("exec")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-it")]),a._v(" web "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ping")]),a._v(" db\n")])])]),t("h3",{attrs:{id:"不同网络中的容器通信"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#不同网络中的容器通信"}},[a._v("#")]),a._v(" 不同网络中的容器通信")]),a._v(" "),t("p",[a._v("容器可以连接到多个网络，以便与不同网络中的容器通信。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 创建两个网络")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" network create frontend\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" network create backend\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 创建容器并连接到各自的网络")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--name")]),a._v(" web "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--network")]),a._v(" frontend nginx\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--name")]),a._v(" db "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--network")]),a._v(" backend mysql:5.7\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 将web容器也连接到backend网络")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" network connect backend web\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 现在web容器可以访问db容器")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("exec")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-it")]),a._v(" web "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ping")]),a._v(" db\n")])])]),t("h2",{attrs:{id:"dns和服务发现"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dns和服务发现"}},[a._v("#")]),a._v(" DNS和服务发现")]),a._v(" "),t("p",[a._v("Docker内置了DNS服务器，用于容器名称解析。")]),a._v(" "),t("h3",{attrs:{id:"容器dns配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#容器dns配置"}},[a._v("#")]),a._v(" 容器DNS配置")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 查看容器DNS配置")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("exec")]),a._v(" container_id "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("cat")]),a._v(" /etc/resolv.conf\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 自定义DNS服务器")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--dns")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("8.8")]),a._v(".8.8 "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--dns")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("8.8")]),a._v(".4.4 nginx\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 自定义DNS搜索域")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" --dns-search example.com nginx\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 添加DNS选项")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" --dns-opt timeout:3 nginx\n")])])]),t("h3",{attrs:{id:"服务发现"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#服务发现"}},[a._v("#")]),a._v(" 服务发现")]),a._v(" "),t("p",[a._v("在Docker Swarm模式下，Docker提供了内置的服务发现功能。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 创建服务")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("service")]),a._v(" create "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--name")]),a._v(" web "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--replicas")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--network")]),a._v(" my-overlay nginx\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 其他服务可以通过服务名访问")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("service")]),a._v(" create "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--name")]),a._v(" client "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--network")]),a._v(" my-overlay busybox "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ping")]),a._v(" web\n")])])]),t("h2",{attrs:{id:"网络安全"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#网络安全"}},[a._v("#")]),a._v(" 网络安全")]),a._v(" "),t("h3",{attrs:{id:"网络隔离"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#网络隔离"}},[a._v("#")]),a._v(" 网络隔离")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 创建隔离网络")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" network create "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--internal")]),a._v(" isolated-network\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 在隔离网络中启动容器（无法访问外部网络）")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--network")]),a._v(" isolated-network nginx\n")])])]),t("h3",{attrs:{id:"限制容器网络功能"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#限制容器网络功能"}},[a._v("#")]),a._v(" 限制容器网络功能")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 禁止容器修改iptables规则")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" --cap-drop NET_ADMIN nginx\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 允许容器配置网络")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" --cap-add NET_ADMIN nginx\n")])])]),t("h3",{attrs:{id:"使用网络策略"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用网络策略"}},[a._v("#")]),a._v(" 使用网络策略")]),a._v(" "),t("p",[a._v("在Kubernetes等编排系统中，可以使用网络策略来控制容器间的通信。")]),a._v(" "),t("h2",{attrs:{id:"网络故障排查"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#网络故障排查"}},[a._v("#")]),a._v(" 网络故障排查")]),a._v(" "),t("h3",{attrs:{id:"常见问题与解决方案"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#常见问题与解决方案"}},[a._v("#")]),a._v(" 常见问题与解决方案")]),a._v(" "),t("ol",[t("li",[t("p",[t("strong",[a._v("容器无法连接到外部网络")])]),a._v(" "),t("ul",[t("li",[a._v("检查宿主机网络配置")]),a._v(" "),t("li",[a._v("确认Docker网络配置正确")]),a._v(" "),t("li",[a._v("检查防火墙规则")])])]),a._v(" "),t("li",[t("p",[t("strong",[a._v("容器间无法通信")])]),a._v(" "),t("ul",[t("li",[a._v("确保容器在同一网络中")]),a._v(" "),t("li",[a._v("检查网络驱动是否支持容器间通信")]),a._v(" "),t("li",[a._v("验证容器网络配置")])])]),a._v(" "),t("li",[t("p",[t("strong",[a._v("端口映射不工作")])]),a._v(" "),t("ul",[t("li",[a._v("确认端口映射配置正确")]),a._v(" "),t("li",[a._v("检查宿主机防火墙是否允许该端口")]),a._v(" "),t("li",[a._v("验证应用是否在容器内正确监听")])])])]),a._v(" "),t("h3",{attrs:{id:"调试工具和命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#调试工具和命令"}},[a._v("#")]),a._v(" 调试工具和命令")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 使用网络调试容器")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-it")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--network")]),a._v(" container:container_id nicolaka/netshoot\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 查看网络接口")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("exec")]),a._v(" container_id "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ip")]),a._v(" addr\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 测试网络连接")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("exec")]),a._v(" container_id "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ping")]),a._v(" google.com\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 查看路由表")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("exec")]),a._v(" container_id route\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 查看iptables规则")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("exec")]),a._v(" container_id iptables "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-L")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 跟踪网络路径")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("exec")]),a._v(" container_id "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("traceroute")]),a._v(" google.com\n")])])]),t("h2",{attrs:{id:"高级网络配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#高级网络配置"}},[a._v("#")]),a._v(" 高级网络配置")]),a._v(" "),t("h3",{attrs:{id:"自定义网络插件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#自定义网络插件"}},[a._v("#")]),a._v(" 自定义网络插件")]),a._v(" "),t("p",[a._v("Docker支持第三方网络插件，如Calico、Weave和Flannel等。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 安装网络插件")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" plugin "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("plugin-name"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 使用网络插件创建网络")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" network create "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--driver")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("plugin-name"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" my-network\n")])])]),t("h3",{attrs:{id:"配置docker守护进程网络"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#配置docker守护进程网络"}},[a._v("#")]),a._v(" 配置Docker守护进程网络")]),a._v(" "),t("p",[a._v("可以通过修改Docker守护进程配置来自定义默认网络设置。")]),a._v(" "),t("div",{staticClass:"language-json extra-class"},[t("pre",{pre:!0,attrs:{class:"language-json"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// /etc/docker/daemon.json")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v('"bip"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"192.168.1.1/24"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v('"fixed-cidr"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"192.168.1.0/25"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v('"fixed-cidr-v6"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"2001:db8::/64"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v('"mtu"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1500")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v('"default-gateway"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"192.168.1.254"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v('"default-gateway-v6"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"2001:db8::ff"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[a._v('"dns"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"8.8.8.8"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"8.8.4.4"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("h3",{attrs:{id:"使用ipv6"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用ipv6"}},[a._v("#")]),a._v(" 使用IPv6")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 启用IPv6支持")]),a._v("\n// /etc/docker/daemon.json\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"ipv6"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),a._v(" true,\n  "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"fixed-cidr-v6"')]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"2001:db8:1::/64"')]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 创建支持IPv6的网络")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" network create "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--ipv6")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--subnet")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2001")]),a._v(":db8:1::/64 ipv6-network\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 启动支持IPv6的容器")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--network")]),a._v(" ipv6-network nginx\n")])])]),t("h2",{attrs:{id:"docker网络在生产环境中的最佳实践"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker网络在生产环境中的最佳实践"}},[a._v("#")]),a._v(" Docker网络在生产环境中的最佳实践")]),a._v(" "),t("ol",[t("li",[t("p",[t("strong",[a._v("使用自定义网络")])]),a._v(" "),t("ul",[t("li",[a._v("避免使用默认bridge网络")]),a._v(" "),t("li",[a._v("为不同应用创建独立的网络")])])]),a._v(" "),t("li",[t("p",[t("strong",[a._v("合理规划网络地址空间")])]),a._v(" "),t("ul",[t("li",[a._v("避免与现有网络冲突")]),a._v(" "),t("li",[a._v("预留足够的IP地址空间")])])]),a._v(" "),t("li",[t("p",[t("strong",[a._v("使用overlay网络进行集群通信")])]),a._v(" "),t("ul",[t("li",[a._v("在Docker Swarm中使用overlay网络")]),a._v(" "),t("li",[a._v("配置加密的overlay网络提高安全性")])])]),a._v(" "),t("li",[t("p",[t("strong",[a._v("限制容器网络访问")])]),a._v(" "),t("ul",[t("li",[a._v("只映射必要的端口")]),a._v(" "),t("li",[a._v("使用内部网络隔离敏感服务")])])]),a._v(" "),t("li",[t("p",[t("strong",[a._v("监控网络性能")])]),a._v(" "),t("ul",[t("li",[a._v("使用工具监控网络流量和性能")]),a._v(" "),t("li",[a._v("定期检查网络配置")])])]),a._v(" "),t("li",[t("p",[t("strong",[a._v("使用服务发现")])]),a._v(" "),t("ul",[t("li",[a._v("在微服务架构中使用服务发现")]),a._v(" "),t("li",[a._v("考虑使用外部服务发现工具")])])])]),a._v(" "),t("h2",{attrs:{id:"docker网络与云平台集成"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker网络与云平台集成"}},[a._v("#")]),a._v(" Docker网络与云平台集成")]),a._v(" "),t("h3",{attrs:{id:"aws"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#aws"}},[a._v("#")]),a._v(" AWS")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 使用AWS VPC驱动")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" network create "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--driver")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("overlay "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--attachable")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--opt")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("com.docker.network.driver.mtu")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("9001")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  my-aws-network\n")])])]),t("h3",{attrs:{id:"azure"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#azure"}},[a._v("#")]),a._v(" Azure")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 使用Azure VNET集成")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" network create "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--driver")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("overlay "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--subnet")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("10.0")]),a._v(".0.0/16 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--opt")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("com.docker.network.driver.mtu")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1500")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  my-azure-network\n")])])]),t("h3",{attrs:{id:"google-cloud"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#google-cloud"}},[a._v("#")]),a._v(" Google Cloud")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 使用GCP网络")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" network create "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--driver")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("overlay "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--subnet")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("10.0")]),a._v(".0.0/16 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  my-gcp-network\n")])])]),t("h2",{attrs:{id:"总结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[a._v("#")]),a._v(" 总结")]),a._v(" "),t("p",[a._v("Docker网络提供了灵活的容器通信解决方案，从简单的单机桥接网络到复杂的多主机overlay网络。通过合理配置Docker网络，可以构建安全、高效的容器化应用架构。")]),a._v(" "),t("h2",{attrs:{id:"下一步学习"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#下一步学习"}},[a._v("#")]),a._v(" 下一步学习")]),a._v(" "),t("ul",[t("li",[t("RouterLink",{attrs:{to:"/docker/docker-volumes.html"}},[a._v("Docker数据卷管理")])],1),a._v(" "),t("li",[t("RouterLink",{attrs:{to:"/docker/docker-compose.html"}},[a._v("Docker Compose详解")])],1),a._v(" "),t("li",[t("RouterLink",{attrs:{to:"/docker/docker-swarm.html"}},[a._v("Docker Swarm集群")])],1),a._v(" "),t("li",[t("RouterLink",{attrs:{to:"/docker/kubernetes-network.html"}},[a._v("Kubernetes网络")])],1)])])}),[],!1,null,null,null);t.default=r.exports}}]);