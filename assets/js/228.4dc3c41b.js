(window.webpackJsonp=window.webpackJsonp||[]).push([[228],{1021:function(t,a,n){"use strict";n.r(a);var s=n(1),r=Object(s.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("blockquote",[a("p",[t._v("点击勘误"),a("a",{attrs:{href:"https://github.com/webVueBlog/JavaPlusDoc/issues",target:"_blank",rel:"noopener noreferrer"}},[t._v("issues"),a("OutboundLink")],1),t._v("，哪吒感谢大家的阅读")])]),t._v(" "),a("img",{attrs:{align:"right",width:"100",src:"https://cdn.jsdelivr.net/gh/YunYouJun/yun/images/yun-alpha-compressed.png"}}),t._v(" "),a("h2",{attrs:{id:"java方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#java方法"}},[t._v("#")]),t._v(" Java方法")]),t._v(" "),a("p",[t._v("实例方法、静态方法与抽象方法的区别与应用")]),t._v(" "),a("p",[t._v("什么是方法？如何声明方法？方法有哪几种？什么是实例方法？什么是静态方法？什么是抽象方法？什么是本地方法？")]),t._v(" "),a("p",[t._v("01、Java中的方法是什么？")]),t._v(" "),a("p",[t._v("方法用来实现代码的可重用性，我们编写一次方法，并多次使用它。通过增加或者删除方法中的一部分代码，就可以提高整体代码的可读性。")]),t._v(" "),a("p",[t._v("02、如何声明方法？")]),t._v(" "),a("p",[t._v("方法的声明反映了方法的一些信息，比如说可见性、返回类型、方法名和参数。")]),t._v(" "),a("p",[t._v("03、方法有哪几种？")]),t._v(" "),a("p",[t._v("方法可以分为两种，一种叫标准类库方法，一种叫用户自定义方法。")]),t._v(" "),a("p",[t._v("05、什么是静态方法？")]),t._v(" "),a("p",[t._v("相应的，有 static 关键字修饰的方法就叫做静态方法。")]),t._v(" "),a("p",[t._v("06、什么是抽象方法？")]),t._v(" "),a("p",[t._v("没有方法体的方法被称为抽象方法，它总是在抽象类中声明。")]),t._v(" "),a("h3",{attrs:{id:"java可变参数详解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#java可变参数详解"}},[t._v("#")]),t._v(" Java可变参数详解")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v('public static void main(String[] args) {\n\tprint("想");\n\tprint("想", "啊");\n\tprint("想", "啊", "的");\n\tprint("想", "啊", "的", "啊");\n}\n\npublic static void print(String... strs) {\n\tfor (String s : strs)\n\t\tSystem.out.print(s);\n\tSystem.out.println();\n}\n')])])])])}),[],!1,null,null,null);a.default=r.exports}}]);